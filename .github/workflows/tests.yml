name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        php: [8.1, 8.2, 8.3]
        dependency-version: [prefer-stable]
        include:
          # Laravel 9 - PHP 8.1, 8.2
          - php: 8.1
            laravel: 9.*
            testbench: 7.*
          - php: 8.2
            laravel: 9.*
            testbench: 7.*
            
          # Laravel 10 - PHP 8.1, 8.2, 8.3
          - php: 8.1
            laravel: 10.*
            testbench: 8.*
          - php: 8.2
            laravel: 10.*
            testbench: 8.*
          - php: 8.3
            laravel: 10.*
            testbench: 8.*
            
          # Laravel 11 - PHP 8.2, 8.3
          - php: 8.2
            laravel: 11.*
            testbench: 9.*  
          - php: 8.3
            laravel: 11.*
            testbench: 9.*
            
          # Laravel 12 - PHP 8.2, 8.3
          - php: 8.2
            laravel: 12.*
            testbench: 10.*
          - php: 8.3
            laravel: 12.*
            testbench: 10.*

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, intl, gd, exif, iconv, fileinfo, redis
          coverage: pcov
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-${{ matrix.php }}-${{ matrix.laravel }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-${{ matrix.php }}-
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer config allow-plugins.pestphp/pest-plugin true
          composer config allow-plugins.pestphp/pest-plugin-laravel true
          
          echo "Installing dependencies for Laravel ${{ matrix.laravel }} on PHP ${{ matrix.php }}"
          
          # Install correct Pest version based on Laravel version
          if [[ "${{ matrix.laravel }}" == "9.*" ]]; then
            composer require "pestphp/pest:^1.22" "pestphp/pest-plugin-laravel:^1.4" --no-interaction --no-update
          else
            composer require "pestphp/pest:^2.0" "pestphp/pest-plugin-laravel:^2.0" --no-interaction --no-update
          fi
          
          # Set specific versions for Laravel and TestBench
          if [[ "${{ matrix.laravel }}" == "11.*" ]]; then
            # Laravel 11 needs specific handling due to larastan
            composer require --no-update "nunomaduro/larastan:^3.0"
          fi
          
          # Install Laravel framework and Testbench for this combination
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          
          # Update dependencies for this specific combination
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --with-all-dependencies

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
          
      - name: PHP Information
        run: |
          echo "PHP Version:"
          php -v
          echo "Installed PHP Extensions:"
          php -m | grep -E 'redis|mbstring|xml|json'

      - name: Test Redis connection
        run: |
          echo "Testing Redis connection..."
          redis-cli PING
          echo "Redis is available!"

      - name: Prepare test environment
        run: |
          echo "Clearing Redis database..."
          redis-cli FLUSHALL
          echo "Setting file permissions..."
          chmod -R 755 .
          echo "Test environment prepared!"

      - name: Execute tests
        env:
          REDIS_CLIENT: phpredis
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
        run: |
          echo "Running tests..."
          # Execute with verbose output for CI debugging
          vendor/bin/pest --verbose

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: success() && matrix.php == '8.2' && matrix.laravel == '10.*' && matrix.testbench == '8.*'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false